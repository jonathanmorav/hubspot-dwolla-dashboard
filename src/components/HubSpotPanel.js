import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from "react/jsx-runtime";
import React from 'react';
import { SkeletonCustomer } from './Skeleton';
import { EmptyState } from './EmptyState';
import './Panel.css';
function HubSpotPanelComponent({ companies, contacts, loading, error }) {
    if (loading) {
        return (_jsxs("div", { className: "panel hubspot-panel", role: "region", "aria-labelledby": "hubspot-heading", children: [_jsx("h2", { id: "hubspot-heading", children: "HubSpot Data" }), _jsx("div", { className: "panel-content", children: _jsxs("div", { role: "status", "aria-live": "polite", "aria-label": "Loading HubSpot data", children: [_jsxs("div", { className: "data-section", children: [_jsx("h3", { children: "Contacts" }), _jsx(SkeletonCustomer, {}), _jsx(SkeletonCustomer, {})] }), _jsxs("div", { className: "data-section", children: [_jsx("h3", { children: "Companies" }), _jsx(SkeletonCustomer, {})] })] }) })] }));
    }
    if (error) {
        return (_jsxs("div", { className: "panel hubspot-panel", role: "region", "aria-labelledby": "hubspot-heading", children: [_jsx("h2", { id: "hubspot-heading", children: "HubSpot Data" }), _jsx("div", { className: "panel-content", children: _jsx("div", { className: "error", role: "alert", children: error }) })] }));
    }
    const hasData = companies.length > 0 || contacts.length > 0;
    return (_jsxs("div", { className: "panel hubspot-panel", role: "region", "aria-labelledby": "hubspot-heading", children: [_jsx("h2", { id: "hubspot-heading", children: "HubSpot Data" }), _jsx("div", { className: "panel-content", children: !hasData ? (_jsx(EmptyState, { title: "No HubSpot data found", description: "Search for a customer by email, name, or business name to view their HubSpot information" })) : (_jsxs(_Fragment, { children: [contacts.length > 0 && (_jsxs("div", { className: "data-section", children: [_jsxs("h3", { children: ["Contacts (", contacts.length, ")"] }), _jsx("div", { role: "list", "aria-label": "HubSpot contacts", children: contacts.map(contact => (_jsxs("div", { className: "data-item", role: "listitem", children: [_jsxs("div", { className: "data-row", children: [_jsx("span", { className: "label", children: "Name:" }), _jsxs("span", { className: "value", children: [contact.properties.firstname, " ", contact.properties.lastname] })] }), _jsxs("div", { className: "data-row", children: [_jsx("span", { className: "label", children: "Email:" }), _jsx("span", { className: "value", children: contact.properties.email })] }), contact.properties.phone && (_jsxs("div", { className: "data-row", children: [_jsx("span", { className: "label", children: "Phone:" }), _jsx("span", { className: "value", children: contact.properties.phone })] }))] }, contact.id))) })] })), companies.length > 0 && (_jsxs("div", { className: "data-section", children: [_jsxs("h3", { children: ["Companies (", companies.length, ")"] }), _jsx("div", { role: "list", "aria-label": "HubSpot companies", children: companies.map(company => (_jsxs("div", { className: "data-item", role: "listitem", children: [_jsxs("div", { className: "data-row", children: [_jsx("span", { className: "label", children: "Company:" }), _jsx("span", { className: "value", children: company.properties.name })] }), company.properties.dwolla_id && (_jsxs("div", { className: "data-row", children: [_jsx("span", { className: "label", children: "Dwolla ID:" }), _jsx("span", { className: "value highlight", children: company.properties.dwolla_id })] })), company.properties.onboarding_status && (_jsxs("div", { className: "data-row", children: [_jsx("span", { className: "label", children: "Onboarding:" }), _jsx("span", { className: `value status-${company.properties.onboarding_status.toLowerCase()}`, children: company.properties.onboarding_status })] })), company.properties.sob && (_jsxs("div", { className: "data-row", children: [_jsx("span", { className: "label", children: "SOB:" }), _jsx("span", { className: "value", children: company.properties.sob })] }))] }, company.id))) })] }))] })) })] }));
}
export const HubSpotPanel = React.memo(HubSpotPanelComponent);
