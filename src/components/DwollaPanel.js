import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from "react/jsx-runtime";
import React from 'react';
import { SkeletonCustomer, SkeletonTransfer } from './Skeleton';
import { EmptyState } from './EmptyState';
import './Panel.css';
function DwollaPanelComponent({ customers, transfers, loading, error, onSelectCustomer }) {
    if (loading) {
        return (_jsxs("div", { className: "panel dwolla-panel", role: "region", "aria-labelledby": "dwolla-heading", children: [_jsx("h2", { id: "dwolla-heading", children: "Dwolla Data" }), _jsx("div", { className: "panel-content", children: _jsxs("div", { role: "status", "aria-live": "polite", "aria-label": "Loading Dwolla data", children: [_jsxs("div", { className: "data-section", children: [_jsx("h3", { children: "Customers" }), _jsx(SkeletonCustomer, {}), _jsx(SkeletonCustomer, {})] }), transfers.length > 0 && (_jsxs("div", { className: "data-section", children: [_jsx("h3", { children: "Recent Transfers" }), _jsx(SkeletonTransfer, {}), _jsx(SkeletonTransfer, {}), _jsx(SkeletonTransfer, {})] }))] }) })] }));
    }
    if (error) {
        return (_jsxs("div", { className: "panel dwolla-panel", role: "region", "aria-labelledby": "dwolla-heading", children: [_jsx("h2", { id: "dwolla-heading", children: "Dwolla Data" }), _jsx("div", { className: "panel-content", children: _jsx("div", { className: "error", role: "alert", children: error }) })] }));
    }
    const hasData = customers.length > 0;
    return (_jsxs("div", { className: "panel dwolla-panel", role: "region", "aria-labelledby": "dwolla-heading", children: [_jsx("h2", { id: "dwolla-heading", children: "Dwolla Data" }), _jsx("div", { className: "panel-content", children: !hasData ? (_jsx(EmptyState, { title: "No Dwolla data found", description: "Search for a customer to view their Dwolla account and transfer history" })) : (_jsxs(_Fragment, { children: [_jsxs("div", { className: "data-section", children: [_jsxs("h3", { children: ["Customers (", customers.length, ")"] }), _jsx("div", { role: "list", "aria-label": "Dwolla customers", children: customers.map(customer => (_jsxs("div", { className: "data-item clickable", onClick: () => onSelectCustomer?.(customer.id), onKeyDown: (e) => e.key === 'Enter' && onSelectCustomer?.(customer.id), role: "listitem", tabIndex: 0, "aria-label": `Customer: ${customer.businessName || `${customer.firstName} ${customer.lastName}`}`, children: [_jsxs("div", { className: "data-row", children: [_jsx("span", { className: "label", children: "Name:" }), _jsx("span", { className: "value", children: customer.businessName || `${customer.firstName} ${customer.lastName}` })] }), _jsxs("div", { className: "data-row", children: [_jsx("span", { className: "label", children: "Email:" }), _jsx("span", { className: "value", children: customer.email })] }), _jsxs("div", { className: "data-row", children: [_jsx("span", { className: "label", children: "Type:" }), _jsx("span", { className: "value", children: customer.type })] }), _jsxs("div", { className: "data-row", children: [_jsx("span", { className: "label", children: "Status:" }), _jsx("span", { className: `value status-${customer.status}`, children: customer.status })] }), _jsxs("div", { className: "data-row", children: [_jsx("span", { className: "label", children: "Created:" }), _jsx("span", { className: "value", children: new Date(customer.created).toLocaleDateString() })] })] }, customer.id))) })] }), transfers.length > 0 && (_jsxs("div", { className: "data-section", children: [_jsxs("h3", { children: ["Recent Transfers (", transfers.length, ")"] }), _jsx("div", { className: "transfers-list", role: "list", "aria-label": "Recent transfers", children: transfers.map(transfer => (_jsxs("div", { className: "transfer-item", role: "listitem", children: [_jsxs("div", { className: "transfer-header", children: [_jsxs("span", { className: "transfer-amount", children: ["$", transfer.amount.value] }), _jsx("span", { className: `transfer-status status-${transfer.status}`, children: transfer.status })] }), _jsx("div", { className: "transfer-date", children: new Date(transfer.created).toLocaleString() })] }, transfer.id))) })] }))] })) })] }));
}
export const DwollaPanel = React.memo(DwollaPanelComponent);
